;;; xtmrender1.xtm -- using the Extempore 3D rendering pipeline

;; Author: Andrew Sorensen
;; Keywords: extempore
;; Required dylibs: libGL, libglfw3, libassimp, libsoil

;;; Commentary:

;; the peppino model (and other Extempore "assets") are available from
;; http://extempore.moso.com.au/extras/assets.tgz

;;; Code:

(sys:load "libs/external/glfw3.xtm")

(sys:load "libs/core/scheduler.xtm")

(run_main_event_loop)

(bind-val width i32 1024)
(bind-val height i32 768)
(bind-val window GLFWwindow*)

(bind-func init_window:MAINEVT
  (lambda (t d)
    (glfwSetErrorCallback (convert (get_native_fptr glfw_error_callback)))
    (set! window (glfw_init_and_create_interaction_window width height))
    void))

;; need gfx context before loading opengl related libs on win32 platform
($ (sched_main init_window))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(sys:load "libs/external/assimp.xtm")

(bind-val peppino XTMModel*)

(bind-func render:XTMRENDERCB
  (lambda (frame shader m v p data)
    (rotate_matrix m (* .1 (i64tof frame)) 0.0 1.0 0.0)    
    (translate_matrix m 0.0 -2.0 0.0)    
    (xtm_draw_model (convert data XTMModel*) shader m v p)
    void))

(bind-func gl_render
  (lambda (model:XTMModel*)
    (if (null? model)
        (println "gl_render recieved null pointer for model - did you load the model successfully?")
        (begin (xtm_render null render:XTMRENDERCB null null (convert model i8*))
               void))))

(bind-func init_gfx:MAINEVT
  (lambda (t d)
    (set! peppino (assimp_load_model (cstring (cat2 (String (sys_sharedir)) (String "/assets/models/"))) "peppino.dae" aiProcess_Triangulate))    
    (xtm_render_init (glfw_get_framebuffer_width window) (glfw_get_framebuffer_height window))
    void))

(bind-func gl_draw_loop:MAINEVT
  (lambda (time data)
    (gl_print_error "start loop errors?")
    (gl_render peppino)
    ;; swap buffers
    (glfwPollEvents)
    (glfwSwapBuffers window)
    ;; schedule next frame callback
    (sched_main (+ time (/ 1.0 30.0)) gl_draw_loop:MAINEVT)))


($ (sched_main init_gfx))
($ (sched_main gl_draw_loop))
;; and to start it running...
;; (gl_draw_loop (now) (/ 1.0 30.0)) ;; 30fps

